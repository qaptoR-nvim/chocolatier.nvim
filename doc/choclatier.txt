*chocolatier.txt*        For Neovim >= 0.8.0        Last change: 2024 June 05

==============================================================================
Table of Contents                             *chocolatier-table-of-contents*

1. Prerequisites                                  |chocolatier-prerequisites|
2. Installing                                        |chocolatier-installing|
  - Using packer                        |chocolatier-installing-using-packer|
  - Using lazy.nvim                  |chocolatier-installing-using-lazy.nvim|
  - Using vim-plug                    |chocolatier-installing-using-vim-plug|
3. Basic Usage                                      |chocolatier-basic-usage|
4. Configuration                                  |chocolatier-configuration|
  - Overriding                         |chocolatier-configuration-overriding|


A espresso/kimbie inspired chocolatey theme written in lua with treesitter
and semantic highlights support!

Adapted from `ellisonleao/gruvbox.nvim` theme.

==============================================================================
1. Prerequisites                                  *chocolatier-prerequisites*

Neovim 0.10.0+


==============================================================================
2. Installing                                        *chocolatier-installing*


USING PACKER                            *chocolatier-installing-using-packer*

>lua
    use { "qaptoR-nvim/chocolatier" }
<


USING LAZY.NVIM                      *chocolatier-installing-using-lazy.nvim*

>lua
    { "qaptoR-nvim/chocolatier", priority = 1000 , config = true, opts = ...}
<


USING VIM-PLUG                        *chocolatier-installing-using-vim-plug*

>vim
    Plug 'qaptoR-nvim/chocolatier'
<


==============================================================================
3. Basic Usage                                      *chocolatier-basic-usage*

Inside `init.vim`

>vim
    set background=dark " or light if you want light mode
    colorscheme chocolatier
<

Inside `init.lua`

>lua
    vim.o.background = "dark" -- or "light" for light mode
    vim.cmd([[colorscheme chocolatier]])
<


==============================================================================
4. Configuration                                  *chocolatier-configuration*

Additional settings for chocolatier are:

>lua
    -- Default options:
    require("chocolatier").setup({
      terminal_colors = true, -- add neovim terminal colors
      undercurl = true,
      underline = true,
      bold = true,
      italic = {
        strings = true,
        emphasis = true,
        comments = true,
        operators = false,
        folds = true,
      },
      strikethrough = true,
      invert_selection = false,
      invert_signs = false,
      invert_tabline = false,
      invert_intend_guides = false,
      inverse = true, -- invert background for search, diffs, statuslines and errors
      contrast = "", -- can be "hard", "soft" or empty string
      palette_overrides = {},
      overrides = {},
      dim_inactive = false,
      transparent_mode = false,
    })
    vim.cmd("colorscheme chocolatier")
<

**VERY IMPORTANT**Make sure to call setup() **BEFORE** calling the colorscheme
command, to use your custom configs


OVERRIDING                             *chocolatier-configuration-overriding*


PALETTE ~

You can specify your own palette colors. For example:

>lua
    require("choclatier").setup({
        palette_overrides = {
            bright_green = "#990000",
        }
    })
    vim.cmd("colorscheme chocolatier")
<


HIGHLIGHT GROUPS ~

If you donâ€™t enjoy the current color for a specific highlight group, now you
can just override it in the setup. For example:

>lua
    require("choclatier").setup({
        overrides = {
            SignColumn = {bg = "#ff9900"}
        }
    })
    vim.cmd("colorscheme chocolatier")
<

It also works with treesitter groups and lsp semantic highlight tokens

>lua
    require("choclatier").setup({
        overrides = {
            ["@lsp.type.method"] = { bg = "#ff9900" },
            ["@comment.lua"] = { bg = "#000000" },
        }
    })
    vim.cmd("colorscheme chocolatier")
<

Please note that the override values must follow the attributes from the
highlight group map, such as:

- **fg** - foreground color
- **bg** - background color
- **bold** - true or false for bold font
- **italic** - true or false for italic font

Other values can be seen in |`synIDattr`|

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
